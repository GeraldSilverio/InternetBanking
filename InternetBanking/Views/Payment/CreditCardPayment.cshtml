@using InternetBanking.Core.Application.ViewModels.Payment;
@using InternetBanking.Core.Application.ViewModels.SavingAccount;
@using InternetBanking.Core.Application.ViewModels.CreditCards;
@model SavePaymentViewModel
@{
    ViewData["Title"] = "Pago Tarjeta";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12 d-flex justify-content-center align-items-center" style="min-height: 70vh;">
            <div class="col-6">
                <div class="card mt-3">
                    <div class="card-header bg-blue-card-header text-light text-center">
                        <h4>Realizar pago a Tarjeta</h4>
                    </div>
                    <div class="card-body mt-3">
                        @if (Model != null && Model.HasError)
                        {
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                <p class="text-center">@Model.Error</p>
                                <button type="button" class=" btn btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        }
                        <form class=" mb-3" method="post" asp-controller="Payment" asp-action="CreditCardPayment">


                            <div class="mb-3">
                                <label>Seleccione la cuenta de origen</label>
                                <select class="form-select" asp-for="OriginAccount">
                                    <option value="0" selected>Seleccione una cuenta para pagar</option>
                                    @foreach (SavingAccountViewModel account in ViewBag.Account)
                                    {
                                        <option asp-for="OriginAccount" value="@account.Id">Cuenta: @account.AccountCode Balance: @account.Balance</option>
                                    }
                                </select>
                                <span asp-validation-for="OriginAccount" class="text-danger"></span>
                            </div>


                            <div class="mb-3">
                                <label asp-for="Amount">Monto a Pagar</label>
                                <input value="0" type="text" id="balanceInput" oninput="validateBalanceInput(this)"
                                       class="form-control" placeholder="0.00" asp-for="Amount" autocomplete="off">
                                <span asp-validation-for="Amount" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label>Seleccione la tarjera de crédito para realizar el avance</label>
                                <select class="form-select" asp-for="DestinationAccount">
                                    <option value="0" selected>Seleccione la tarjeta que quiere pagar</option>
                                    @foreach (CardViewModel card in ViewBag.CreditCard)
                                    {
                                        @if(card.Debt != decimal.Zero)
                                        {
                                            <option asp-for="DestinationAccount" value="@card.Id">Cuenta: @card.CardNumber Deuda: @card.Debt</option>
                                            
                                        }
                                    }

                                </select>
                                <span asp-validation-for="DestinationAccount" class="text-danger"></span>
                            </div>

                            <button type="submit" class="btn btn-outline-primary float-end ms-2">Realizar Pago</button>
                            <a class="btn btn-secondary float-end" asp-controller="Client" asp-action="Index">Volver</a>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<style>

    .card {
        border: 0.2px solid #09385B;
        border-radius: 4px 4px 10px 10px;
        box-shadow: 0 0 10px #6BA2CD;
    }

    label {
        color: #1B4A6F;
        font-size: 18px;
        font-weight: bold;
    }

    .input-blue {
        color: #1B4A6F;
        font-size: 18px;
        font-weight: bold;
    }

    .bg-blue {
        background-color: #09385B;
    }

    .bg-blue-card-header {
        background-color: #09385B;
        color: white;
    }


</style>

<script>
    function validateBalanceInput(input) {
        input.value = input.value.replace(/[^0-9.]/g, '');

        var decimalCount = (input.value.match(/\./g) || []).length;
        if (decimalCount > 1) {
            input.value = input.value.replace(/\.+$/, '');
        }

        var decimalIndex = input.value.indexOf('.');
        if (decimalIndex !== -1) {
            var decimalPart = input.value.substring(decimalIndex + 1);
            if (decimalPart.length > 2) {
                input.value = input.value.slice(0, decimalIndex + 3);
            }
        }
    }
</script>